version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
        - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
        - VITE_STRIPE_PUBLISHABLE_KEY=${VITE_STRIPE_PUBLISHABLE_KEY}
        - VITE_APP_VERSION=${VITE_APP_VERSION:-dev}
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - blessed-horizon

  # Development database (optional - for local testing)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER:-blessed}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-horizon}
      POSTGRES_DB: ${DB_NAME:-blessed_horizon}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./supabase/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - blessed-horizon
    profiles:
      - dev

  # Redis cache (optional - for session management)
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - blessed-horizon
    profiles:
      - dev

  # Local S3 compatible storage (optional - for testing)
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - blessed-horizon
    profiles:
      - dev

networks:
  blessed-horizon:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  minio_data:
