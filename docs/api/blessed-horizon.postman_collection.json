{
  "info": {
    "name": "Blessed Horizon API",
    "description": "Complete Postman collection for Blessed Horizon Fundraising Platform API. Includes authentication, campaigns, donations, users, analytics, and admin endpoints.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "https://api.blessedhorizon.org/v1",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "campaign_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "donation_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('user_id', response.user.id);",
                  "    pm.environment.set('access_token', response.accessToken);",
                  "    pm.environment.set('refresh_token', response.refreshToken);",
                  "}",
                  "",
                  "pm.test('Status code is 201', () => {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has required fields', () => {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('user');",
                  "    pm.expect(response).to.have.property('accessToken');",
                  "    pm.expect(response).to.have.property('refreshToken');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"SecurePassword123!\",\n    \"fullName\": \"{{$randomFullName}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('user_id', response.user.id);",
                  "    pm.environment.set('access_token', response.accessToken);",
                  "    pm.environment.set('refresh_token', response.refreshToken);",
                  "}",
                  "",
                  "pm.test('Status code is 200', () => {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has tokens', () => {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.accessToken).to.be.a('string');",
                  "    pm.expect(response.refreshToken).to.be.a('string');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"SecurePassword123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('access_token', response.accessToken);",
                  "}",
                  "",
                  "pm.test('Status code is 200', () => {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"refreshToken\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Campaigns",
      "item": [
        {
          "name": "Create Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('campaign_id', response.id);",
                  "}",
                  "",
                  "pm.test('Status code is 201', () => {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Campaign has required fields', () => {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('title');",
                  "    pm.expect(response).to.have.property('goalAmount');",
                  "    pm.expect(response).to.have.property('status');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"{{$randomBs}} Project\",\n    \"description\": \"This is a test campaign for {{$randomBs}}. We aim to make a difference by {{$randomCatchPhrase}}.\",\n    \"goalAmount\": {{$randomInt}},\n    \"endDate\": \"2025-12-31T23:59:59Z\",\n    \"category\": \"education\",\n    \"tags\": [\"education\", \"community\", \"test\"],\n    \"images\": [\n        \"https://picsum.photos/800/600?random=1\",\n        \"https://picsum.photos/800/600?random=2\"\n    ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/campaigns",
              "host": ["{{base_url}}"],
              "path": ["campaigns"]
            }
          }
        },
        {
          "name": "List Campaigns",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/campaigns?status=active&limit=10&sortBy=createdAt&order=desc",
              "host": ["{{base_url}}"],
              "path": ["campaigns"],
              "query": [
                {
                  "key": "category",
                  "value": "medical",
                  "disabled": true
                },
                {
                  "key": "status",
                  "value": "active"
                },
                {
                  "key": "search",
                  "value": "education",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "page",
                  "value": "1",
                  "disabled": true
                },
                {
                  "key": "sortBy",
                  "value": "createdAt"
                },
                {
                  "key": "order",
                  "value": "desc"
                }
              ]
            }
          }
        },
        {
          "name": "Get Campaign",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/campaigns/{{campaign_id}}",
              "host": ["{{base_url}}"],
              "path": ["campaigns", "{{campaign_id}}"]
            }
          }
        },
        {
          "name": "Update Campaign",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"description\": \"Updated description with more details about the impact...\",\n    \"goalAmount\": 75000\n}"
            },
            "url": {
              "raw": "{{base_url}}/campaigns/{{campaign_id}}",
              "host": ["{{base_url}}"],
              "path": ["campaigns", "{{campaign_id}}"]
            }
          }
        },
        {
          "name": "Delete Campaign",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/campaigns/{{campaign_id}}",
              "host": ["{{base_url}}"],
              "path": ["campaigns", "{{campaign_id}}"]
            }
          }
        },
        {
          "name": "Post Campaign Update",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Milestone Reached!\",\n    \"content\": \"We've reached 50% of our fundraising goal! Thank you to all our supporters.\",\n    \"images\": [\"https://picsum.photos/800/600?random=3\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/campaigns/{{campaign_id}}/updates",
              "host": ["{{base_url}}"],
              "path": ["campaigns", "{{campaign_id}}", "updates"]
            }
          }
        },
        {
          "name": "Get Campaign Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/campaigns/{{campaign_id}}/analytics",
              "host": ["{{base_url}}"],
              "path": ["campaigns", "{{campaign_id}}", "analytics"]
            }
          }
        }
      ]
    },
    {
      "name": "Donations",
      "item": [
        {
          "name": "Make Donation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('donation_id', response.id);",
                  "}",
                  "",
                  "pm.test('Status code is 201', () => {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Donation created successfully', () => {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('id');",
                  "    pm.expect(response).to.have.property('amount');",
                  "    pm.expect(response).to.have.property('status');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"campaignId\": \"{{campaign_id}}\",\n    \"amount\": 5000,\n    \"paymentMethodId\": \"pm_test_1234567890\",\n    \"isRecurring\": false,\n    \"isAnonymous\": false,\n    \"message\": \"Happy to support this great cause!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/donations",
              "host": ["{{base_url}}"],
              "path": ["donations"]
            }
          }
        },
        {
          "name": "Get User Donations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}/donations",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}", "donations"]
            }
          }
        },
        {
          "name": "Get Donation Receipt",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/donations/{{donation_id}}/receipt",
              "host": ["{{base_url}}"],
              "path": ["donations", "{{donation_id}}", "receipt"]
            }
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/me",
              "host": ["{{base_url}}"],
              "path": ["users", "me"]
            }
          }
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"fullName\": \"Updated Name\",\n    \"bio\": \"Passionate about making a difference in the community.\",\n    \"avatarUrl\": \"https://example.com/avatar.jpg\",\n    \"socialLinks\": {\n        \"twitter\": \"https://twitter.com/username\",\n        \"linkedin\": \"https://linkedin.com/in/username\"\n    }\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/me",
              "host": ["{{base_url}}"],
              "path": ["users", "me"]
            }
          }
        },
        {
          "name": "Upload Verification Document",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "documentType",
                  "value": "passport",
                  "type": "text"
                },
                {
                  "key": "document",
                  "type": "file",
                  "src": "/path/to/document.pdf"
                },
                {
                  "key": "additionalInfo",
                  "value": "Passport number: AB123456",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/users/me/verification",
              "host": ["{{base_url}}"],
              "path": ["users", "me", "verification"]
            }
          }
        },
        {
          "name": "Get User Campaigns",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}/campaigns",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}", "campaigns"]
            }
          }
        }
      ]
    },
    {
      "name": "Analytics",
      "item": [
        {
          "name": "Get Platform Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/analytics/platform?period=month",
              "host": ["{{base_url}}"],
              "path": ["analytics", "platform"],
              "query": [
                {
                  "key": "period",
                  "value": "month"
                }
              ]
            }
          }
        },
        {
          "name": "Get Trending Campaigns",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/analytics/trending?limit=10",
              "host": ["{{base_url}}"],
              "path": ["analytics", "trending"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Admin",
      "item": [
        {
          "name": "Get Pending Verifications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/verifications/pending",
              "host": ["{{base_url}}"],
              "path": ["admin", "verifications", "pending"]
            }
          }
        },
        {
          "name": "Approve Verification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"verificationId\": \"ver_123456\",\n    \"status\": \"approved\",\n    \"notes\": \"All documents verified successfully\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/verifications/approve",
              "host": ["{{base_url}}"],
              "path": ["admin", "verifications", "approve"]
            }
          }
        },
        {
          "name": "Suspend Campaign",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"campaignId\": \"{{campaign_id}}\",\n    \"reason\": \"Violation of platform guidelines\",\n    \"duration\": 7\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/campaigns/suspend",
              "host": ["{{base_url}}"],
              "path": ["admin", "campaigns", "suspend"]
            }
          }
        }
      ]
    }
  ]
}